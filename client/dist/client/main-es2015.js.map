{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/pages/edit-list/edit-list.component.ts","./src/app/pages/edit-list/edit-list.component.html","./src/app/pages/edit-task/edit-task.component.ts","./src/app/pages/edit-task/edit-task.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/new-list/new-list.component.ts","./src/app/pages/new-list/new-list.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/task.service.ts","./src/app/web-req-intreseptor.service.ts","./src/app/web-request.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport { NewListComponent } from './pages/new-list/new-list.component'\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginComponent } from './pages/login/login.component'\nimport { SignupComponent } from './pages/signup/signup.component'\nimport { EditListComponent } from './pages/edit-list/edit-list.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/lists', pathMatch: 'full' },\n  { path: 'new-list', component: NewListComponent },\n  { path: 'edit-list/:listId', component: EditListComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'lists', component: TaskViewComponent },\n  { path: 'lists/:listId', component: TaskViewComponent },\n  { path: 'lists/:listId/new-task', component: NewTaskComponent },\n  { path: 'lists/:listId/edit-task/:taskId', component: EditTaskComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\nimport  { HttpClientModule, HTTP_INTERCEPTORS} from  '@angular/common/http';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { WebReqIntreseptorService } from './web-req-intreseptor.service';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { EditListComponent } from './pages/edit-list/edit-list.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewListComponent,\n    NewTaskComponent,\n    LoginComponent,\n    SignupComponent,\n    EditListComponent,\n    EditTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS , useClass:WebReqIntreseptorService , multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private http: HttpClient,\n    private webService: WebRequestService,\n    private router: Router\n  ) { }\n\n  login(email: string, password: string) {\n    return this.webService.login(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        this.setSession(res.body.user._id, res.body.authTokens.accessToken, res.body.authTokens.refreshToken);\n        console.log(\"Login successfull\")\n      })\n    )\n  }\n\n  signUp(email: string, password: string) {\n    return this.webService.signUp(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        this.setSession(res.body.newUser._id, res.body.authTokens.accessToken, res.body.authTokens.refreshToken);\n        console.log(\"Login successfull\")\n      })\n    )\n  }\n\n  // set authoraization credensials in localStorage\n  private setSession(userId: string, accessToken: string, refreshToken: string) {\n    localStorage.setItem('user-id', userId)\n    localStorage.setItem('x-access-token', accessToken)\n    localStorage.setItem('x-refresh-token', refreshToken)\n  }\n\n  logout() {\n    this.removeSession()\n    console.log('Logout successfull')\n    this.router.navigate(['/login'])\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('x-access-token');\n  }\n\n  setAccessToken(accessToken: string) {\n    localStorage.setItem('x-access-token', accessToken)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem('x-refresh-token')\n  }\n\n  getUserId() {\n    return localStorage.getItem('user-id')\n  }\n\n  // remove authoraization credensials in localStorage\n  private removeSession() {\n    localStorage.removeItem('user-id')\n    localStorage.removeItem('x-access-token')\n    localStorage.removeItem('x-refresh-token')\n  }\n\n  getRefreshAccessToken(){\n    return this.http.get(`${this.webService.ROOT_URL}/users/me/access-token`,{\n      headers:{\n        'x-refresh-token':this.getRefreshToken(),\n        '_id':this.getUserId()\n      },\n      observe:'response'\n    }).pipe(\n      tap((res: HttpResponse<any>)=>{\n        this.setAccessToken(res.body.accessToken)\n      })\n    )\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TaskService } from 'src/app/task.service';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-edit-list',\n  templateUrl: './edit-list.component.html',\n  styleUrls: ['./edit-list.component.css']\n})\nexport class EditListComponent implements OnInit {\n\n  constructor(\n    private route:ActivatedRoute,\n    private taskServie:TaskService,\n    private router: Router\n  ) { }\n\n  listId:string;\n  title:string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe((p: Params) => {\n      this.listId = p.listId;\n      this.taskServie.getOneList(`lists/${p.listId}`).subscribe((data:List)=>{\n        this.title = data.title;\n      })\n    })\n  }\n\n  editList(title:string){\n    this.taskServie.updateList(this.listId ,title).subscribe(()=>{\n      this.router.navigate(['/lists',this.listId])\n    });\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Edit your list\n        </h1>\n\n        <div>\n            <input #listNameInput class=\"list-title\" type=\"text\" [value]=\"title\">\n            <button class=\"create-button\" (click)=\"editList(listNameInput.value)\">Update</button>\n        </div>\n\n        <button class=\"go-back\" routerLink=\"/\">Go Back</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TaskService } from 'src/app/task.service';\nimport { Task } from 'src/app/models/task.model';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.css']\n})\nexport class EditTaskComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private taskService: TaskService\n  ) { }\n\n  taskId:string;\n  listId:string;\n  taskTitle:string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe((p:Params)=>{\n      this.taskId = p.taskId\n      this.listId = p.listId\n      this.taskService.getOneTask(p.listId, p.taskId).subscribe((data:Task)=>{\n        this.taskTitle = data.title\n      })\n    })\n  }\n\n  editTask(title:string){\n    this.taskService.updateTask(this.listId, this.taskId, title).subscribe(()=>{\n      this.router.navigate(['/lists',this.listId])\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Edit your task\n        </h1>\n\n        <div>\n            <input #listNameInput class=\"list-title\" type=\"text\" [value]=\"taskTitle\">\n            <button class=\"create-button\" (click)=\"editTask(listNameInput.value)\" >Update</button> \n        </div>\n\n        <button class=\"go-back\" routerLink=\"/\">Go Back</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onUserLogin(gmail: string, password: string) {\n    if (gmail === '' || password === '') {\n      alert('Empty value is not allwoed');\n    } else {\n      this.authService.login(gmail, password).subscribe(data=>{\n        alert('Welcome to our Task Manager Application')\n        this.router.navigate(['/lists'])\n      }, error=>{\n        alert('You are make a Bad request')\n      })\n    }\n  }\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">Login</h1>\n        <div class=\"from-control\">\n            <input #userGamilInput type=\"text\" required placeholder=\"Enter your email\">\n            <input #userPasswordInput type=\"password\" required placeholder=\"Enter your Password\">\n        </div>\n        <button class=\"login-btn\" (click)=\"onUserLogin(userGamilInput.value, userPasswordInput.value )\">Login</button>\n        <p class=\"user-bottom-message\">You haven't any account <a routerLink=\"/signup\">Sign Up</a> here </p>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { Router } from '@angular/router';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-new-list',\n  templateUrl: './new-list.component.html',\n  styleUrls: ['./new-list.component.css']\n})\n\nexport class NewListComponent implements OnInit {\n\n  constructor(\n    private taskService: TaskService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  createNewList(title: string) {\n    if (title === '') {\n      alert('Empty value is not allowed')\n    } else {\n      this.taskService.createList(title).subscribe((res: List) => {\n        this.router.navigate(['/lists', res._id])\n      })\n    }\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Create a new list\n        </h1>\n\n        <div>\n            <input #listNameInput class=\"list-title\" type=\"text\" placeholder=\"Enter list name\">\n            <button class=\"create-button\" (click)=\"createNewList(listNameInput.value)\">Create</button>\n        </div>\n\n        <button class=\"go-back\" routerLink=\"/\">Go Back</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.css']\n})\nexport class NewTaskComponent implements OnInit {\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  listId: string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe((p: Params) => {\n      this.listId = p['listId']\n      console.log(this.listId)\n    })\n  }\n\n  createNewTask(title: string) {\n    if (title === '') {\n      alert('Empty value is not allowed')\n    } else {\n      this.taskService.createTask(title, this.listId).subscribe((newTask: Task) => {\n        this.router.navigate(['lists/' + newTask._listId])\n      })\n    }\n  }\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Create a new task\n        </h1>\n\n        <div>\n            <input #listNameInput class=\"list-title\" type=\"text\" placeholder=\"Enter task \">\n            <button class=\"create-button\" (click)=\"createNewTask(listNameInput.value)\" >Create</button> \n        </div>\n\n        <button class=\"go-back\" routerLink=\"/\">Go Back</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onUserSingUp(email: string, password: string) {\n    if (email === '' || password === '') {\n      alert('Empty value is not allwoed');\n    } else {\n      this.authService.signUp(email, password).subscribe(data =>{\n        alert('Welcome to our Task Manager Application')\n        this.router.navigate(['/lists'])\n      }, error=>{\n        alert('You are make a Bad request')\n      })\n    }\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">Sign Up</h1>\n        <div class=\"from-control\">\n            <input #userGamilInput  type=\"text\" placeholder=\"Enter your email\">\n            <input #userPasswordInput type=\"password\" placeholder=\"Enter your Password\">\n        </div>\n        <button class=\"login-btn\" (click)=\"onUserSingUp(userGamilInput.value, userPasswordInput.value )\">SingUp</button>\n        <p class=\"user-bottom-message\">You haven't any account <a routerLink=\"/login\">Login</a> here </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { List } from 'src/app/models/list.model';\nimport {AuthService} from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.css']\n})\n\nexport class TaskViewComponent implements OnInit {\n\n  lists: List[];\n  tasks: Task[];\n\n  constructor(\n    private taskServie: TaskService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  listId:string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe((p: Params) => {\n      if (p.listId) {\n        this.taskServie.getTasks(p.listId).subscribe((tasks: Task[]) => {\n          this.tasks = tasks\n        })\n      }else{\n        this.tasks = undefined\n      }\n    })\n\n    this.taskServie.getList().subscribe((list: List[]) => {\n      this.lists = list;\n    })\n\n    this.route.params.subscribe((p:Params)=>{\n      this.listId = p['listId']\n      console.log(this.listId)\n    })\n  }\n\n  onTaskClick(task: Task) {\n    console.log(task)\n    this.taskServie.completed(task).subscribe(() => {\n      task.completed = !task.completed;\n    })\n  }\n\n  logout(){\n    this.authService.logout();\n  }\n\n  listDelete(){\n    this.taskServie.deleteList(this.listId).subscribe(()=>{\n      this.router.navigate(['lists'])\n    })\n  }\n\n  taskDelete(taskId:string){\n    this.taskServie.deleteTask(this.listId,taskId).subscribe(()=>{\n      this.tasks = this.tasks.filter(val => val._id !== taskId)\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"task-manager-container\">\n\n        <button class=\"list-task-menu\" mat-mini-fab color=\"primary\" [matMenuTriggerFor]=\"menu\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"logout()\">Logout</button>\n        </mat-menu>\n\n        <div class=\"sidebar\">\n            <h1>Lists</h1>\n            <!-- list menu element -->\n            <div class=\"list-menu\">\n                <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists', list._id]\"\n                    routerLinkActive=\"is-active\">\n                    <p class=\"list-task-title\">{{list.title}}</p>\n                    <button class=\"list-task-option\" mat-icon-button [matMenuTriggerFor]=\"list_menu\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #list_menu=\"matMenu\">\n                        <button mat-menu-item [routerLink]=\"['/edit-list',listId]\">Edit</button>\n                        <button mat-menu-item (click)=\"listDelete()\">Delete</button>\n                    </mat-menu>\n                </a>\n            </div>\n            <button class=\"new-list\" routerLink=\"/new-list\">+ New List</button>\n        </div>\n\n        <div class=\"task-list-container\">\n            <div *ngIf=\"tasks\">\n                <h1>Tasks</h1>\n                <!-- task elements -->\n                <div class=\"task\" *ngFor=\"let task of tasks\">\n                    <div class=\"task-list-title\" (click)=\"onTaskClick(task)\" [ngClass]=\"{'task-completed':task.completed}\">\n                        <span>{{task.title}}</span>\n                    </div>\n                    <div class=\"task-list-option\">\n                        <button mat-icon-button [matMenuTriggerFor]=\"task_menu\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n                        <mat-menu #task_menu=\"matMenu\">\n                            <button mat-menu-item [routerLink]=\"['/lists', listId, 'edit-task', task._id]\" >Edit</button>\n                            <button mat-menu-item (click)=\"taskDelete(task._id)\">Delete</button>\n                        </mat-menu>\n                    </div>\n                </div>\n                <button class=\"task-add-btn\" routerLink=\"./new-task\">+</button>\n                <h3 class=\"empty-message\" *ngIf=\"tasks.length === 0\">There are no taks here! Click the add button to\n                    create task</h3>\n            </div>\n            <div class=\"empty-message\" *ngIf=\"!tasks\">\n                <h1>Please select your list.</h1>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {WebRequestService} from './web-request.service';\nimport { Task } from './models/task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private webRequestService: WebRequestService) { }\n\n  createList(title:string){\n    return this.webRequestService.post('lists',{title})\n  }\n\n  updateList(id:string, title:string){\n    return this.webRequestService.patch(`lists/${id}`,{title})\n  }\n\n  getList(){\n    return this.webRequestService.get('lists')\n  }\n\n  getOneList(url:string){\n    return this.webRequestService.get(url)\n  }\n\n  deleteList(listId:string){\n    return this.webRequestService.delete(`lists/${listId}`)\n  }\n  \n  getTasks(listId: string){\n    return this.webRequestService.get(`lists/${listId}/tasks`)\n  }\n\n  createTask(title:string , listId:string){\n    return this.webRequestService.post(`lists/${listId}/tasks`,{title})\n  }\n\n  completed(task: Task){\n    return this.webRequestService.patch(`lists/${task._listId}/tasks/${task._id}`,{\n      completed: !task.completed\n    })\n  }\n\n  deleteTask(listId:string, taskId:string){\n    return this.webRequestService.delete(`lists/${listId}/tasks/${taskId}`)\n  }\n\n  updateTask(listId:string, taskId:string, title:string){\n    return this.webRequestService.patch(`lists/${listId}/tasks/${taskId}`,{title})\n  }\n\n  getOneTask(listId:string , taskId:string){\n    return this.webRequestService.get(`lists/${listId}/tasks/${taskId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse  } from '@angular/common/http'\nimport {Observable, throwError, empty } from 'rxjs'\nimport { AuthService } from './auth.service';\nimport { catchError, switchMap, tap } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebReqIntreseptorService implements HttpInterceptor{\n\n  constructor(private authService: AuthService) { }\n\n  intercept(req :HttpRequest<any> , next: HttpHandler):Observable<any>{\n    // handel the request\n    req = this.addAuthHeader(req);\n\n    // call next() and handle this response\n    return next.handle(req).pipe(\n      catchError((err:HttpErrorResponse)=>{\n        // if error status is 401 that means unauthorized req\n        if(err.status === 401){\n\n          return this.accessTokenRefreshing().pipe(\n            switchMap(()=>{\n              req = this.addAuthHeader(req)\n              return next.handle(req)\n            }),\n            catchError((err:any)=>{\n              this.authService.logout()\n              return empty()\n            })\n          )\n        }\n        return throwError(err)\n      })\n    )\n  }\n\n  accessTokenRefreshing(){\n    return this.authService.getRefreshAccessToken().pipe(\n      tap(()=>{\n        console.log('Access token is refreshed')\n      })\n    )\n  }\n\n  addAuthHeader(req: HttpRequest<any>){\n    // get the access token\n      const token = this.authService.getAccessToken();\n      \n      if(token){\n        // append the access token to the request header\n        return req.clone({\n          setHeaders:{\n            'x-access-token':token\n          }\n        })\n      }\n\n      return req;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) {\n    this.ROOT_URL = 'https://app-api-task-manager.herokuapp.com'\n  }\n\n  get(url: string) {\n    return this.http.get(`${this.ROOT_URL}/${url}`)\n  }\n\n  post(url: string, payload: Object) {\n    return this.http.post(`${this.ROOT_URL}/${url}`, payload)\n  }\n\n  patch(url: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/${url}`, payload)\n  }\n\n  delete(url: string) {\n    return this.http.delete(`${this.ROOT_URL}/${url}`)\n  }\n\n  login(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, { email, password }, { observe: 'response' })\n  }\n\n  signUp(email:string , password:string){\n    return this.http.post(`${this.ROOT_URL}/users`,{email, password}, {observe:'response'})\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}